name: CI/PR

on:
  pull_request:
    branches: ['**']

  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
      - name: Install project
        run: pnpm install
      - name: Formatcheck
        run: pnpm ci:format-check

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Restore ESLint cache
        uses: actions/cache@v4
        with:
          path: .eslintcache
          key: eslintcache-${{ hashFiles('pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.ts') }}
          restore-keys: |
            eslintcache-

      - name: Install project
        run: pnpm install

      - name: Run ESLint
        run: pnpm ci:lint

      - name: Save ESLint cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: .eslintcache
          key: eslintcache-${{ hashFiles('pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.ts') }}

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
      - name: Install project
        run: pnpm install
      - name: Typecheck
        run: pnpm ci:typecheck-project

  test:
    strategy:
      matrix:
        node-version: [22, 23]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.draft == false
    steps:
      - name: Enable long paths support
        if: matrix.os == 'windows-latest'
        run: git config --system core.longpaths true
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install project
        run: pnpm install
      - name: Tests
        run: pnpm test

  build:
    runs-on: 'ubuntu-latest'
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
      - name: Install project
        run: pnpm install
      - name: Build
        run: pnpm build
